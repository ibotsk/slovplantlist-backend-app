{
  "name": "nomenclature",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "properties": {
    "ntype": {
      "type": "string",
      "required": true
    },
    "hybrid": {
      "type": "boolean",
      "required": true,
      "default": false
    },
    "genus": {
      "type": "string"
    },
    "species": {
      "type": "string"
    },
    "subsp": {
      "type": "string"
    },
    "var": {
      "type": "string"
    },
    "subvar": {
      "type": "string"
    },
    "forma": {
      "type": "string"
    },
    "nothosubsp": {
      "type": "string"
    },
    "nothoforma": {
      "type": "string"
    },
    "proles": {
      "type": "string"
    },
    "unranked": {
      "type": "string"
    },
    "authors": {
      "type": "string"
    },
    "genusH": {
      "type": "string",
      "mysql": {
        "columnName": "genus_h"
      }
    },
    "speciesH": {
      "type": "string",
      "mysql": {
        "columnName": "species_h"
      }
    },
    "subspH": {
      "type": "string",
      "mysql": {
        "columnName": "subsp_h"
      }
    },
    "varH": {
      "type": "string",
      "mysql": {
        "columnName": "var_h"
      }
    },
    "subvarH": {
      "type": "string",
      "mysql": {
        "columnName": "subvar_h"
      }
    },
    "formaH": {
      "type": "string",
      "mysql": {
        "columnName": "forma_h"
      }
    },
    "nothosubspH": {
      "type": "string",
      "mysql": {
        "columnName": "nothosubsp_h"
      }
    },
    "nothoformaH": {
      "type": "string",
      "mysql": {
        "columnName": "nothoforma_h"
      }
    },
    "authorsH": {
      "type": "string",
      "mysql": {
        "columnName": "authors_h"
      }
    },
    "publication": {
      "type": "string"
    },
    "tribus": {
      "type": "string"
    },
    "vernacular": {
      "type": "string"
    },
    "ntypeOrder": {
      "type": "number",
      "mysql": {
        "columnName": "ntype_order"
      }
    },
    "isIsonym": {
      "type": "boolean",
      "required": true,
      "default": false,
      "mysql": {
        "columnName": "is_isonym"
      }
    },
    "isBasionym": {
      "type": "boolean",
      "required": true,
      "default": false,
      "mysql": {
        "columnName": "is_basionym"
      }
    },
    "notes": {
      "type": "string"
    },
    "aggregate": {
      "type": "string"
    },
    "idAcceptedName": {
      "type": "number",
      "mysql": {
        "columnName": "id_accepted_name"
      }
    },
    "idGenus": {
      "type": "number",
      "mysql": {
        "columnName": "id_genus"
      }
    },
    "idBasionym": {
      "type": "number",
      "mysql": {
        "columnName": "id_basionym"
      }
    },
    "idReplaced": {
      "type": "number",
      "mysql": {
        "columnName": "id_replaced"
      }
    },
    "idNomenNovum": {
      "type": "number",
      "mysql": {
        "columnName": "id_nomen_novum"
      }
    },
    "checkedTimestamp": {
      "type": "date",
      "mysql": {
        "columnName": "checked_timestamp"
      }
    },
    "checkedBy": {
      "type": "string",
      "mysql": {
        "columnName": "checked_by"
      }
    }
  },
  "validations": [],
  "relations": {
    "nomen-status": {
      "type": "hasOne",
      "model": "nomen-status",
      "foreignKey": "idNomenclature"
    },
    "record-info": {
      "type": "hasOne",
      "model": "record-info",
      "foreignKey": "idNomenclature"
    },
    "basionym-for": {
      "type": "hasMany",
      "model": "nomenclature",
      "foreignKey": "idBasionym"
    },
    "nomen-novum-for": {
      "type": "hasMany",
      "model": "nomenclature",
      "foreignKey": "idNomenNovum"
    },
    "replaced-for": {
      "type": "hasMany",
      "model": "nomenclature",
      "foreignKey": "idReplaced"
    },
    "accepted": {
      "type": "belongsTo",
      "model": "nomenclature",
      "foreignKey": "idAcceptedName"
    },
    "genus-rel": {
      "type": "belongsTo",
      "model": "genus",
      "foreignKey": "idGenus"
    },
    "basionym": {
      "type": "belongsTo",
      "model": "nomenclature",
      "foreignKey": "idBasionym"
    },
    "replaced": {
      "type": "belongsTo",
      "model": "nomenclature",
      "foreignKey": "idReplaced"
    },
    "nomen-novum": {
      "type": "belongsTo",
      "model": "nomenclature",
      "foreignKey": "idNomenNovum"
    },
    "synonyms-taxonomic": {
      "type": "hasMany",
      "model": "synonyms",
      "foreignKey": "idParent",
      "scope": {
        "include": [
          "synonym"
        ],
        "where": {
          "syntype": 2
        },
        "order": "rorder ASC"
      }
    },
    "synonyms-nomenclatoric": {
      "type": "hasMany",
      "model": "synonyms",
      "foreignKey": "idParent",
      "scope": {
        "include": [
          "synonym"
        ],
        "where": {
          "syntype": 3
        },
        "order": "rorder ASC"
      }
    },
    "synonyms-invalid": {
      "type": "hasMany",
      "model": "synonyms",
      "foreignKey": "idParent",
      "scope": {
        "include": [
          "synonym"
        ],
        "where": {
          "syntype": 1
        },
        "order": "rorder ASC"
      }
    },
    "synonyms-misidentification": {
      "type": "hasMany",
      "model": "synonyms",
      "foreignKey": "idParent",
      "scope": {
        "include": [
          "synonym"
        ],
        "where": {
          "syntype": 4
        },
        "order": "rorder ASC"
      }
    },
    "synonyms-nomenclatoric-through": {
      "type": "hasMany",
      "model": "nomenclature",
      "foreignKey": "idParent",
      "through": "synonyms",
      "keyThrough": "idSynonym",
      "scope": {
        "where": {
          "syntype": 3
        },
        "order": "rorder ASC"
      }
    },
    "parent-of-synonyms": {
      "type": "hasMany",
      "model": "synonyms",
      "foreignKey": "idParent"
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW"
    }
  ],
  "methods": {}
}
